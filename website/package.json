{
  "repository": {
    "type": "git",
    "url": "git://github.com/transloadit/content.git"
  },
  "inspired_by": [
    "https://gist.github.com/addyosmani/9f10c555e32a8d06ddb0",
    "https://github.com/Munter/generator-npm-webapp"
  ],
  "comments": [
    "By default, we assume JEKYLL_ENV=development. Use JEKYLL_ENV=production npm run build to override"
  ],
  "license": "Proprietary",
  "scripts": {
    "autoprefixer": "postcss --use autoprefixer assets/build/*.css --dir assets/build/ --map assets/build/",
    "browsersync": "browser-sync start  --config bs-config-content.js",
    "build:assets:copy": "mkdir -p _site/assets/build && rsync -a --delete --progress assets/build/ _site/assets/build",
    "build:assets:index": "node _scripts/asset-index.js assets/build/*.js assets/build/*.css --environment=${JEKYLL_ENV:-development} > _config-asset-index-${JEKYLL_ENV:-development}.yml",
    "build:assets": "npm run clean:assets && parallelshell 'npm run build:js' 'npm run build:css' 'npm run build:images' && npm run build:assets:index && npm run build:assets:copy",
    "build:content:incremental": "bundle exec jekyll build --incremental --config _config.yml,_config-asset-index-${JEKYLL_ENV:-development}.yml${JEKYLL_MORE_CONF:-}",
    "build:content": "bundle exec jekyll build --trace --config _config.yml,_config-asset-index-${JEKYLL_ENV:-development}.yml${JEKYLL_MORE_CONF:-}",
    "build:css": "cd assets/stylesheets && for file in *.scss; do env BUNDLE=${file%.*} npm run sass:${JEKYLL_ENV:-development}; done && cd - && npm run autoprefixer && du -hs assets/build/*",
    "build:images": "true",
    "build:js": "cd assets/javascripts && for file in *.js; do env BUNDLE=${file%.*} npm run uglify:${JEKYLL_ENV:-development}; done && cd - && du -hs assets/build/*",
    "build": "npm run build:assets && npm run build:content",
    "clean:assets": "rm -f assets/build/*.{js,css}",
    "crosspost:medium": "source env.sh && env JEKYLL_MORE_CONF=',_config-crosspost-to-medium.yml' npm run build:content",
    "deploy": "_scripts/deploy.sh",
    "fix:artwork": "_scripts/rename-artwork.sh",
    "fix:js": "eslint assets/javascripts/{jquery_plugins,main} _scripts --fix",
    "fix:markdown": "remark . --output",
    "fix:sass": "bundle exec sass-convert --in-place --from scss --to scss --recursive assets/stylesheets",
    "fix:spelling": "mdspell ${SPELL_ARGS} --en-us --ignore-numbers --ignore-acronyms $(./_scripts/find-content.sh)",
    "fix:titlecaseing:bodytoo": "jekyll-fix-titlecase --fix --body --paths \"$(./_scripts/find-content.sh)\"",
    "fix:titlecaseing": "jekyll-fix-titlecase --dir ./_posts --fix",
    "imagemin": "imagemin assets/images/* assets/build/images/* --progressive",
    "import": "cd _scripts && for file in import-*.coffee; do env DEBUG=*:* coffee ./${file}; done",
    "lint:inconsiderate": "alex $(./_scripts/find-content.sh) |grep --color=auto -v 'no issues found' || true",
    "lint:js": "eslint assets/javascripts/{jquery_plugins,main} _scripts",
    "lint:markdown": "remark --quiet --frail $(./_scripts/find-content.sh --no-yaml)",
    "lint:sass": "sass-lint --verbose assets/stylesheets/**/*.scss",
    "lint:spelling": "env SPELL_ARGS=\"${SPELL_ARGS} --report\" npm run fix:spelling",
    "lint:titlecaseing": "jekyll-fix-titlecase --dir ./_posts",
    "lint": "(npm run lint:sass || true) && (npm run lint:inconsiderate || true) && npm run lint:js && npm run lint:markdown && npm run lint:spelling && npm run lint:titlecaseing",
    "postinstall": "_scripts/postinstall.sh",
    "sass:development": "node-sass assets/stylesheets/${BUNDLE}.scss --output-style compact --source-map assets/build/${BUNDLE}.css.map --source-map-contents --output assets/build/",
    "sass:production": "node-sass assets/stylesheets/${BUNDLE}.scss --output-style compressed --source-map assets/build/${BUNDLE}.css.map --source-map-contents --output assets/build/",
    "start": "npm run build && parallelshell 'npm run watch' 'npm run browsersync'",
    "test": "npm run lint:inconsiderate && npm run lint:spelling && npm run lint && echo \"All okay : )\"",
    "uglify:development": "uglifyjs --stats --output=assets/build/${BUNDLE}.js --source-map=assets/build/${BUNDLE}.js.map -- $(node assets/javascripts/${BUNDLE}.js)",
    "uglify:production": "uglifyjs --stats --output=assets/build/${BUNDLE}.js --source-map=assets/build/${BUNDLE}.js.map --compress hoist_vars=true -- $(node assets/javascripts/${BUNDLE}.js)",
    "watch:assets": "nodemon --on-change-only --verbose --watch assets --ignore assets/build --ext scss,js,png --exec 'bash -c' \"npm run build:assets${WATCH_SUFFIX}\"",
    "watch:content": "nodemon --on-change-only --verbose --watch . --ignore assets --ignore _site --ext md,html,yml --exec 'bash -c' \"npm run build:content:incremental${WATCH_SUFFIX}\"",
    "watch": "parallelshell 'npm run watch:assets' 'npm run watch:content'"
  },
  "dependencies": {
    "CSSwhat": "0.4.7",
    "airbud": "3.2.1",
    "alex": "2.0.0",
    "async": "0.9.0",
    "autoprefixer": "6.3.1",
    "bower": "1.7.2",
    "browser-sync": "2.11.0",
    "browserify": "12.0.1",
    "cheerio": "0.18.0",
    "cssmin": "0.4.3",
    "debug": "2.1.1",
    "domelementtype": "1.1.3",
    "domhandler": "2.3.0",
    "domutils": "1.5.1",
    "ent": "2.2.0",
    "eslint": "2.5.3",
    "eslint-config-standard": "5.1.0",
    "eslint-plugin-standard": "1.3.2",
    "glob": "4.3.5",
    "imagemin": "4.0.0",
    "imagemin-cli": "2.1.0",
    "inflect": "0.3.0",
    "jekyll-fix-titlecase": "1.4.0",
    "js-yaml": "3.2.5",
    "lodash": "3.0.1",
    "markdown-spellcheck": "0.9.0",
    "minimist": "1.2.0",
    "node-sass": "3.4.2",
    "nodemon": "1.8.1",
    "on-the-githubs": "2.3.0",
    "parallelshell": "2.0.0",
    "postcss-cli": "2.4.0",
    "remark": "3.1.3",
    "remark-lint": "2.0.3",
    "sass-lint": "1.4.0",
    "to-markdown": "0.0.3",
    "uglify-js": "2.6.1",
    "word-wrap": "1.0.0"
  }
}
